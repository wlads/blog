<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: engines | Blog da HE:labs]]></title>
  <link href="http://helabs.com.br/blog/categories/engines/atom.xml" rel="self"/>
  <link href="http://helabs.com.br/blog/"/>
  <updated>2013-08-30T10:44:41-03:00</updated>
  <id>http://helabs.com.br/blog/</id>
  <author>
    <name><![CDATA[Time HE:labs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Modularizando sua aplicação usando Engines]]></title>
    <link href="http://helabs.com.br/blog/2012/12/12/modularizando-sua-aplicacao-usando-engines/"/>
    <updated>2012-12-12T12:12:00-02:00</updated>
    <id>http://helabs.com.br/blog/2012/12/12/modularizando-sua-aplicacao-usando-engines</id>
    <content type="html"><![CDATA[<p>Este é o primeiro post da série <a href="http://helabs.com.br/blog/categories/engines/">Engines</a> aqui no blog da
<a href="http://helabs.com.br">HE:labs</a>.</p>

<p>Durante a última semana criamos três engines para agilizar nossos processos
no <a href="http://startupdev.com.br/">StartupDev</a>:
<a href="https://github.com/Helabs/omniauth-facebook-rails">omniauth-facebook-rails</a>, <a href="https://github.com/Helabs/sigame">sigame</a> e
<a href="https://github.com/Helabs/favorite_it">favorite_it</a>. Todas elas partiram de códigos utilizados
várias vezes em outros projetos. Como qualquer outro projeto open
source, qualquer colaboração é bem vinda e incentivada.</p>

<!-- more -->


<h2>O que são Engines?</h2>

<p><a href="http://guides.rubyonrails.org/engines.html">Engines</a> são aplicações Rails que podem ser incluídas dentro da sua
aplicação. Um exemplo clássico é o Devise. Ele adiciona entre outras
coisas, controllers, views e vários helpers, além de disponibilizar
alguns generators.</p>

<h2>Quando criar Engines?</h2>

<p>Engines servem para diminuir a duplicação de código em suas aplicações
e/ou permitir um bootstrap mais eficiente de novas aplicações. Casos
comuns:</p>

<ul>
<li>Aplicações dentro da empresa que usam um layout e estrutura
semelhantes.</li>
<li>Coisas que são feitas em grande parte das aplicações novas e que se
perde algum tempo copiando código de uma aplicação pra outra.</li>
</ul>


<p>Sem engines, se existe algum bug nessa funcionalidade duplicada, ou uma
alteração no layout compartilhado, todas as aplicações tem que ser
conferidas e consertadas. Isso demanda tempo desnecessário e caso você
esqueça alguma aplicação, pode ser difícil verificar em que situação ela
se encontra depois de um certo tempo.</p>

<h2>Como criar engines?</h2>

<p>Essa é a parte mais fácil! Apesar de existir algumas formas diferentes
de fazê-lo, eu prefiro criar sempre uma "full engine", usando o comando:</p>

<p><code>
rails plugin new nome_da_engine --full
</code></p>

<p>Isso permite a você criar uma classe disponível em todas
as suas aplicações. Por exemplo:</p>

<p>```ruby</p>

<h1>Na sua engine, em app/models/tweet_new_user.rb</h1>

<p>class TweetNewUser
  def initialize(user)
   @user = user
  end</p>

<p>  def tweet!
   Twitter.update("Novo usuário criado! #{@user.username}")
  end
end
```</p>

<p>```ruby</p>

<h1>Na sua app, em app/model/user.rb</h1>

<p>after_create :tweet_about_me
def tweet_about_me
  TweetNewUser.new(self).tweet!
end
```</p>

<p>It just works&trade;. Tudo que você criar dentro da Engine fica
disponível na sua aplicação.</p>

<p>No próximo post da série discutiremos sobre alguns problemas que
você encontra ao desenvolver usando Engines, e como resolvê-los.</p>

<p>Tem alguma tip sobre Engines? Fala aí nos comentários!</p>
]]></content>
  </entry>
  
</feed>
